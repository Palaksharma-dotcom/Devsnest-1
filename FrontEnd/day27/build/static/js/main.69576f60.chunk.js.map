{"version":3,"sources":["components/AddTodo.jsx","actions/index.js","components/ListTodo.jsx","App.jsx","reducers/todoReducer.js","reducers/index.js","store.js","index.js"],"names":["useStyles","makeStyles","root","margin","AddTodo","useState","item","setItem","dispatch","useDispatch","classes","Box","mt","className","Input","type","placeholder","value","onChange","e","target","Button","variant","color","onClick","payload","addItem","title","completed","marginLeft","textAlign","checked","textDecoration","ListTodo","todos","useSelector","state","todo","map","index","FormControlLabel","style","control","Checkbox","done","label","App","Typography","todoReducer","action","filter","newState","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAMMA,EAAYC,YAAW,CACzBC,KAAM,CACF,QAAQ,CACJC,OAAQ,UA0BLC,EArBC,WAAO,IAAD,EACMC,mBAAS,IADf,mBACXC,EADW,KACLC,EADK,KAEZC,EAAWC,cACXC,EAAUV,IAChB,OACI,eAACW,EAAA,EAAD,CAAKC,GAAI,EAAGC,UAAWH,EAAQR,KAA/B,UACI,cAACY,EAAA,EAAD,CAAOC,KAAK,OAAOC,YAAY,gBAAgBC,MAAOX,EAAMY,SAAU,SAACC,GAAD,OAAOZ,EAAQY,EAAEC,OAAOH,UAC9F,cAACI,EAAA,EAAD,CAAQC,QAAQ,WAAWC,MAAM,UAAUC,QAAS,WAChDhB,ECtBA,SAACF,GACb,MAAO,CACHmB,QAASnB,EACTS,KAAM,YDmBWW,CAAQ,CACbC,MAAOrB,EACPsB,WAAW,KAEfrB,EAAQ,KALZ,iBAOA,4B,gBEtBNP,EAAYC,YAAW,CACzBC,KAAM,CACF,MAAO,CACH2B,WAAY,MACZC,UAAW,SAGnBC,QAAS,CACLC,eAAgB,kBAgCTC,EA1BE,WACb,IAAMC,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QACrC7B,EAAWC,cACXC,EAAUV,IAEhB,OACI,cAACW,EAAA,EAAD,CAAKC,GAAI,EAAGC,UAAWH,EAAQR,KAA/B,SAEQgC,EAAMI,KAAI,SAACD,EAAME,GAAP,OACN,gCACI,cAACC,EAAA,EAAD,CAAkBC,MAAO,CAAET,eAAiBK,EAAKT,UAAY,eAAiB,QAC1Ec,QAAS,cAACC,EAAA,EAAD,CAAUZ,QAASM,EAAKO,KAAM1B,SAAU,WAAQV,EDhB1E,CACHO,KAAK,eACLU,QCckGc,OAE9EM,MAAOR,EAAKV,QAEhB,cAACN,EAAA,EAAD,CAAQC,QAAQ,WAAWC,MAAM,YAAYC,QAAS,WAClDhB,ED5BjB,CACHO,KAAM,cACNU,QC0BwCc,KADxB,sBANMA,S,QCbfO,MAXf,WACE,OACE,sBAAKjC,UAAU,MAAf,UACE,cAACkC,EAAA,EAAD,CAAYzB,QAAQ,KAApB,uBACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,QCMS0B,EAhBK,WAAyB,IAAxBZ,EAAuB,uDAAf,GAAIa,EAAW,uCACxC,GAAoB,aAAhBA,EAAOlC,KACP,MAAM,GAAN,mBAAWqB,GAAX,CAAkBa,EAAOxB,UAC7B,GAAoB,gBAAhBwB,EAAOlC,KACP,OAAOqB,EAAMc,QAAO,SAAC5C,EAAMiC,GAAP,OAAiBA,IAAUU,EAAOxB,WAC1D,GAAoB,cAAhBwB,EAAOlC,KACP,OAAOkC,EAAOf,MAElB,GAAoB,iBAAhBe,EAAOlC,KAAyB,CAChC,IAAMoC,EAAQ,YAAOf,GAErB,OADAe,EAASF,EAAOxB,SAASG,WAAY,EAC9BuB,EAEX,OAAOf,G,QCNIgB,EAJKC,YAAgB,CAChChB,KAAMW,I,gBCIKM,EAFDC,YAAYH,EAAaI,YAAgBC,IAAOC,WCA9DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,W","file":"static/js/main.69576f60.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addItem, loadTodo } from \"../actions\";\nimport { Input, Button, Container, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        \"& > *\":{\n            margin: \"5px\"\n        }\n    },\n});\n\nconst AddTodo = () => {\n    const [item, setItem] = useState(\"\");\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    return (\n        <Box mt={3} className={classes.root}>\n            <Input type=\"text\" placeholder=\"Add a todo...\" value={item} onChange={(e) => setItem(e.target.value)} />\n            <Button variant=\"outlined\" color=\"primary\" onClick={() => {\n                dispatch(addItem({\n                    title: item,\n                    completed: false\n                }));\n                setItem('');\n            }}>Add</Button>\n            <div>\n                {/* <Button variant=\"outlined\" color=\"primary\" onClick={() => { dispatch(loadTodo('https://jsonplaceholder.typicode.com/todos/')) }}>Load Todo</Button> */}\n            </div>\n        </Box>\n    )\n}\n\nexport default AddTodo;","const addItem = (item) => {\n    return {\n        payload: item,\n        type: \"ADD_ITEM\",\n    };\n}\n\nconst removeItem = (id) => {\n    return {\n        type: \"REMOVE_ITEM\",\n        payload: id\n    }\n}\n\nconst itemChecked = (id) =>{\n    return {\n        type:\"ITEM_CHECKED\",\n        payload: id\n    }\n}\n\n\nconst loadTodo = (url) => {\n    return (dispatch) => {\n        fetch(url)\n        .then((res) => res.json())\n        .then((todos) => {\n            return dispatch({\n                type: \"LOAD_TODO\",\n                todos: todos.splice(0,5)\n            })\n        });\n    }\n}\n\nexport { addItem, removeItem, loadTodo, itemChecked };","import { useSelector } from \"react-redux\";\nimport { removeItem, itemChecked } from \"../actions\";\nimport { useDispatch } from \"react-redux\";\nimport { Checkbox, FormControlLabel, Button, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        \"& *\": {\n            marginLeft: \"3px\",\n            textAlign: \"left\"\n        }\n    },\n    checked: {\n        textDecoration: \"line-through\",\n    }\n});\n\n\n\nconst ListTodo = () => {\n    const todos = useSelector((state) => state.todo);\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    return (\n        <Box mt={3} className={classes.root}>\n            {\n                todos.map((todo, index) => (\n                    <div key={index}>\n                        <FormControlLabel style={{ textDecoration : todo.completed ? 'line-through' : 'none' }}\n                            control={<Checkbox checked={todo.done} onChange={() => { dispatch(itemChecked(index)) }} />}\n                            // label={todo.done ? `<strike>todo.title</strike>` : todo.title}\n                            label={todo.title}\n                        />\n                        <Button variant=\"outlined\" color=\"secondary\" onClick={() => {\n                            dispatch(removeItem(index))\n                        }}>Delete</Button>\n                    </div>\n                ))\n            }\n        </Box>\n\n    )\n}\n\nexport default ListTodo;","import './App.css';\nimport AddTodo from './components/AddTodo';\nimport ListTodo from './components/ListTodo';\nimport { Typography } from '@material-ui/core';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Typography variant=\"h2\">Todo List</Typography>\n      <AddTodo />\n      <ListTodo />\n    </div>\n\n  )\n}\n\nexport default App;\n","const todoReducer = (state = [], action) => {\n    if (action.type === \"ADD_ITEM\")\n        return [...state, action.payload];\n    if (action.type === \"REMOVE_ITEM\")\n        return state.filter((item, index) => index !== action.payload);\n    if (action.type === \"LOAD_TODO\") {\n        return action.todos;\n    }\n    if (action.type === \"ITEM_CHECKED\") {\n        const newState = [...state]\n        newState[action.payload].completed = true\n        return newState\n    }\n    return state;\n};\n\nexport default todoReducer;","import todoReducer from \"./todoReducer\";\nimport { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({\n    todo: todoReducer,\n})\n\nexport default rootReducer;","import rootReducer from \"./reducers\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { logger } from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}